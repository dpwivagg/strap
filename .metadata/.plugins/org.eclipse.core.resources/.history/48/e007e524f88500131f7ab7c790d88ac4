#include "WPILib.h"

/**
 * This is a demo program showing the use of the RobotBase class.
 * The SimpleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 */ 
class RobotBase : public SimpleRobot
{
	RobotDrive myRobot; // robot drive system
	Joystick stick; // only joystick
	
	public:
		
		/* Constructor */
		RobotBase();
		~RobotBase();
		
		/* Member functions */
		void Test( void );
		void Autonomous( void );
		void OperatorControl( void );
};

/* Constructor */
RobotBase::RobotBase()
{
	myRobot(1, 2),	// these must be initialized in the same order
	stick(1)		// as they are declared above.
	myRobot.SetExpiration(0.1);
}

/**
 * Runs during test mode
 */
void RobotBase::Test( void )
{

}

/**
 * Drive left & right motors for 2 seconds then stop
 */
void RobotBase::Autonomous( void )
{
	myRobot.SetSafetyEnabled(false);
	myRobot.Drive(-0.5, 0.0); 	// drive forwards half speed
	Wait(2.0); 				//    for 2 seconds
	myRobot.Drive(0.0, 0.0); 	// stop robot
}

/**
 * Runs the motors with arcade steering. 
 */
void RobotBase::OperatorControl( void )
{
	myRobot.SetSafetyEnabled(true);

	//voltage = DriverStation.getInstance().getBatteryVoltage();

	while (IsOperatorControl())
	{
		myRobot.ArcadeDrive(stick); // drive with arcade style (use right stick)
		Wait(0.005);				// wait for a motor update time
		bool launchValue;
		bool rewindValue;
		launchValue = stick.GetRawButton(1);
		rewindValue = stick.GetRawButton(2);
		if(launchValue)
		{
			//make arm launch forwards
			
		}
		if(rewindValue)
		{
			//rewind arm
		}
	}
}

START_ROBOT_CLASS(RobotBase);

